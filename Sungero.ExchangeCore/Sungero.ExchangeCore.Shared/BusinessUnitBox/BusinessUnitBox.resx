<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExchangeServiceNotFound" xml:space="preserve">
    <value>Specify exchange service.</value>
  </data>
  <data name="ExchangeServiceNotSupported" xml:space="preserve">
    <value>{0} exchange service is not supported.</value>
  </data>
  <data name="CounterpartyNotFound" xml:space="preserve">
    <value>Counterparty {0} was not found in {1} exchange service.</value>
  </data>
  <data name="NoticeSubject" xml:space="preserve">
    <value>Results of counterparties sync for {0} with {1} exchange service ({2})</value>
  </data>
  <data name="NoticeActiveSection" xml:space="preserve">
    <value>Exchange allowed with counterparties:</value>
  </data>
  <data name="NoticeApprovingByUsSection" xml:space="preserve">
    <value>Exchange invitations received from counterparties:</value>
  </data>
  <data name="NoticeClosedSection" xml:space="preserve">
    <value>Exchange blocked with counterparties:</value>
  </data>
  <data name="NoticeApprovingByCASection" xml:space="preserve">
    <value>Exchange invitation sent to counterparties:</value>
  </data>
  <data name="NoticeLine" xml:space="preserve">
    <value>{0}, TIN/TRRC : {1}/{2}</value>
  </data>
  <data name="BoxError" xml:space="preserve">
    <value>Exchange box sync error {0}.</value>
  </data>
  <data name="TINNote" xml:space="preserve">
    <value>An incorrect TIN was received while syncing data with exchange service: {0}.</value>
  </data>
  <data name="LoginActionTitle" xml:space="preserve">
    <value>Enter Password</value>
  </data>
  <data name="ConnectionEstablished" xml:space="preserve">
    <value>Connected.</value>
  </data>
  <data name="OrganizationFailed" xml:space="preserve">
    <value>Business unit TIN and/or TRRC must match those specified in the exchange service.</value>
  </data>
  <data name="DuplicateServiceExists" xml:space="preserve">
    <value>The selected business unit already has exchange box for the specified exchange service</value>
  </data>
  <data name="CertificateNotFound" xml:space="preserve">
    <value>Configure exchange service certificate for the responsible employee to work properly.</value>
  </data>
  <data name="LoginChangedToOtherOrganization" xml:space="preserve">
    <value>Username must belong to the same business unit as the one specified before.</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone {0}</value>
  </data>
  <data name="FaxNumber" xml:space="preserve">
    <value>Fax {0}</value>
  </data>
  <data name="EnterPasswordToCheckConnection" xml:space="preserve">
    <value>To check connection, set a password</value>
  </data>
  <data name="ExchangeServiceConnectionError" xml:space="preserve">
    <value>An error occurred while connecting to the service.</value>
  </data>
  <data name="NeedProcessSyncronizationConflict" xml:space="preserve">
    <value>Resolve conflicts that occurred while syncing counterparties</value>
  </data>
  <data name="SyncronizationConflictProcessed" xml:space="preserve">
    <value>Sync conflicts resolved</value>
  </data>
  <data name="ConnectorNoLicense" xml:space="preserve">
    <value>Cannot connect to {0} exchange service. License to connector is required.</value>
  </data>
  <data name="LoginIsAlreadyInUse" xml:space="preserve">
    <value>Exchange box with the same username already exists for the selected exchange service.</value>
  </data>
  <data name="BusinessUnitBoxNotActive" xml:space="preserve">
    <value>You can work with exchange service by using only active exchange boxes.</value>
  </data>
  <data name="WrongPassword" xml:space="preserve">
    <value>Authentication error. Make sure the password and username are correct.</value>
  </data>
  <data name="ExchangeServiceName" xml:space="preserve">
    <value>{0} service subscriber</value>
  </data>
  <data name="IsMainCounterpartyBox" xml:space="preserve">
    <value>Main ({0})</value>
  </data>
  <data name="IsRoamingCounterpartyBox" xml:space="preserve">
    <value>Roaming ({0})</value>
  </data>
  <data name="NoticeThreadSubject" xml:space="preserve">
    <value>Counterparty sync results</value>
  </data>
</root>